name: Deploy Ondergrond

on:
  push:
    branches:
      - main      # Deploy to staging
      - develop   # Deploy to dev
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]  # Deploy to production on release

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm run test:coverage

      - name: Build application
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install CDK dependencies
        run: |
          cd infrastructure
          npm ci

      - name: Determine environment
        id: env
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "stack_name=Ondergrond-Infrastructure-Prod" >> $GITHUB_OUTPUT
            echo "description=Production deployment from release ${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "stack_name=Ondergrond-Infrastructure-Staging" >> $GITHUB_OUTPUT
            echo "description=Staging deployment from main branch" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "stack_name=Ondergrond-Infrastructure-Dev" >> $GITHUB_OUTPUT
            echo "description=Development deployment from develop branch" >> $GITHUB_OUTPUT
          fi

      - name: Deploy infrastructure
        run: |
          cd infrastructure
          echo "Deploying to ${{ steps.env.outputs.environment }} environment"
          npx cdk deploy ${{ steps.env.outputs.stack_name }} --require-approval never

      - name: Output deployment URL
        run: |
          cd infrastructure
          echo "## ðŸš€ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.env.outputs.description }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Details:" >> $GITHUB_STEP_SUMMARY
          aws cloudformation describe-stacks --stack-name ${{ steps.env.outputs.stack_name }} --query 'Stacks[0].Outputs' >> $GITHUB_STEP_SUMMARY